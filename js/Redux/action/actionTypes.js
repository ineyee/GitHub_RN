/**
 * 多数情况下，action的type会被定义成字符串常量，放在单独的文件里，方便管理
 */

export default  {
	CHANGE_THEME_COLOR: 'CHANGE_THEME_COLOR',

	// 编写最热模块，第三步：确定该模块该有哪些action
	// 此时我们考虑下最热模块该有那些action（当然不一定一下子就要全部想完，一开始可以想到什么做什么，后面写到什么功能了，再往这里添）
	// 那怎么考虑该模块该有哪些action呢？这其实就是看该界面有哪些用户操作和事件会引起UI上产生变化，不过请注意是操作和事件哦，不仅仅是用户操作哦
	// 比如该最热模块“刷新数据，界面上可能要显示那个小菊花”是一个用户操作，“请求数据成功，界面刷新显示请求到的数据”是一个事件，“请求数据失败，界面上可能要弹窗”是一个事件
	// 因此我们这里就先写能想到的这三个action，后面用到什么了再来添加
	// 好，当我们确定了该模块的需要的action之后，可以先不编写具体的action，因为我们还不知道action具体应该携带什么数据给reducer呢。
	// 所以这个时候，我们返回到刚才编写该模块reducer的地方，继续编写reducer，先确定reducer需要什么数据，然后返回来编写action就简单多了
	POPULAR_FETCH_DATA: 'POPULAR_FETCH_DATA',
	POPULAR_FETCH_DATA_FAILURE: 'POPULAR_FETCH_DATA_FAILURE',
	POPULAR_FETCH_DATA_SUCCESS: 'POPULAR_FETCH_DATA_SUCCESS',
	POPULAR_REFRESH_HEADER: 'POPULAR_REFRESH_HEADER',
	POPULAR_REFRESH_HEADER_FAILURE: 'POPULAR_REFRESH_HEADER_FAILURE',
	POPULAR_REFRESH_HEADER_SUCCESS: 'POPULAR_REFRESH_HEADER_SUCCESS',

	// 趋势模块
	TRENDING_FETCH_DATA: 'TRENDING_FETCH_DATA',
	TRENDING_FETCH_DATA_FAILURE: 'TRENDING_FETCH_DATA_FAILURE',
	TRENDING_FETCH_DATA_SUCCESS: 'TRENDING_FETCH_DATA_SUCCESS',
	TRENDING_REFRESH_HEADER: 'TRENDING_REFRESH_HEADER',
	TRENDING_REFRESH_HEADER_FAILURE: 'TRENDING_REFRESH_HEADER_FAILURE',
	TRENDING_REFRESH_HEADER_SUCCESS: 'TRENDING_REFRESH_HEADER_SUCCESS',

	// 收藏模块
	FAVORITE_FETCH_DATA: 'FAVORITE_FETCH_DATA',
	FAVORITE_FETCH_DATA_FAILURE: 'FAVORITE_FETCH_DATA_FAILURE',
	FAVORITE_FETCH_DATA_SUCCESS: 'FAVORITE_FETCH_DATA_SUCCESS',
	FAVORITE_REFRESH_HEADER: 'FAVORITE_REFRESH_HEADER',
	FAVORITE_REFRESH_HEADER_FAILURE: 'FAVORITE_REFRESH_HEADER_FAILURE',
	FAVORITE_REFRESH_HEADER_SUCCESS: 'FAVORITE_REFRESH_HEADER_SUCCESS',

	// 最热模块读取标签或趋势模块语言
	LANGUAGE_LOAD_SUCCESS: 'LANGUAGE_LOAD_SUCCESS',

	// 修改App主题色
	INIT_THEME_COLOR: 'INIT_THEME_COLOR',
	THEME_COLOR_DID_CHANGE: 'THEME_COLOR_DID_CHANGE',
}